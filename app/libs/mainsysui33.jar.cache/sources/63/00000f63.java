package com.android.systemui;

import android.app.AlarmManager;
import android.app.INotificationManager;
import android.app.IWallpaperManager;
import android.hardware.SensorPrivacyManager;
import android.hardware.display.NightDisplayListener;
import android.os.Handler;
import android.os.Looper;
import android.util.DisplayMetrics;
import android.view.IWindowManager;
import com.android.internal.logging.MetricsLogger;
import com.android.internal.logging.UiEventLogger;
import com.android.internal.statusbar.IStatusBarService;
import com.android.keyguard.KeyguardSecurityModel;
import com.android.keyguard.KeyguardUpdateMonitor;
import com.android.keyguard.clock.ClockManager;
import com.android.settingslib.bluetooth.LocalBluetoothManager;
import com.android.systemui.accessibility.AccessibilityButtonModeObserver;
import com.android.systemui.accessibility.AccessibilityButtonTargetsObserver;
import com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController;
import com.android.systemui.animation.DialogLaunchAnimator;
import com.android.systemui.appops.AppOpsController;
import com.android.systemui.assist.AssistManager;
import com.android.systemui.broadcast.BroadcastDispatcher;
import com.android.systemui.colorextraction.SysuiColorExtractor;
import com.android.systemui.dock.DockManager;
import com.android.systemui.dump.DumpManager;
import com.android.systemui.flags.FeatureFlags;
import com.android.systemui.fragments.FragmentService;
import com.android.systemui.hdmi.HdmiCecSetMenuLanguageHelper;
import com.android.systemui.keyguard.ScreenLifecycle;
import com.android.systemui.keyguard.WakefulnessLifecycle;
import com.android.systemui.media.dialog.MediaOutputDialogFactory;
import com.android.systemui.model.SysUiState;
import com.android.systemui.navigationbar.NavigationBarController;
import com.android.systemui.navigationbar.NavigationModeController;
import com.android.systemui.navigationbar.gestural.EdgeBackGestureHandler;
import com.android.systemui.plugins.ActivityStarter;
import com.android.systemui.plugins.DarkIconDispatcher;
import com.android.systemui.plugins.PluginDependencyProvider;
import com.android.systemui.plugins.PluginManager;
import com.android.systemui.plugins.VolumeDialogController;
import com.android.systemui.plugins.statusbar.StatusBarStateController;
import com.android.systemui.power.EnhancedEstimates;
import com.android.systemui.power.PowerUI;
import com.android.systemui.privacy.PrivacyItemController;
import com.android.systemui.qs.ReduceBrightColorsController;
import com.android.systemui.qs.tiles.dialog.InternetDialogFactory;
import com.android.systemui.recents.OverviewProxyService;
import com.android.systemui.screenrecord.RecordingController;
import com.android.systemui.settings.UserTracker;
import com.android.systemui.shade.ShadeController;
import com.android.systemui.shared.system.ActivityManagerWrapper;
import com.android.systemui.shared.system.DevicePolicyManagerWrapper;
import com.android.systemui.shared.system.PackageManagerWrapper;
import com.android.systemui.statusbar.CommandQueue;
import com.android.systemui.statusbar.NotificationListener;
import com.android.systemui.statusbar.NotificationLockscreenUserManager;
import com.android.systemui.statusbar.NotificationMediaManager;
import com.android.systemui.statusbar.NotificationRemoteInputManager;
import com.android.systemui.statusbar.NotificationShadeWindowController;
import com.android.systemui.statusbar.SmartReplyController;
import com.android.systemui.statusbar.VibratorHelper;
import com.android.systemui.statusbar.events.PrivacyDotViewController;
import com.android.systemui.statusbar.events.SystemStatusAnimationScheduler;
import com.android.systemui.statusbar.notification.collection.render.GroupExpansionManager;
import com.android.systemui.statusbar.notification.collection.render.GroupMembershipManager;
import com.android.systemui.statusbar.notification.logging.NotificationLogger;
import com.android.systemui.statusbar.notification.row.NotificationGutsManager;
import com.android.systemui.statusbar.notification.stack.AmbientState;
import com.android.systemui.statusbar.notification.stack.NotificationSectionsManager;
import com.android.systemui.statusbar.phone.AutoHideController;
import com.android.systemui.statusbar.phone.DozeParameters;
import com.android.systemui.statusbar.phone.KeyguardDismissUtil;
import com.android.systemui.statusbar.phone.LightBarController;
import com.android.systemui.statusbar.phone.LockscreenGestureLogger;
import com.android.systemui.statusbar.phone.ManagedProfileController;
import com.android.systemui.statusbar.phone.ScreenOffAnimationController;
import com.android.systemui.statusbar.phone.StatusBarContentInsetsProvider;
import com.android.systemui.statusbar.phone.StatusBarIconController;
import com.android.systemui.statusbar.phone.SystemUIDialogManager;
import com.android.systemui.statusbar.policy.AccessibilityController;
import com.android.systemui.statusbar.policy.AccessibilityManagerWrapper;
import com.android.systemui.statusbar.policy.BluetoothController;
import com.android.systemui.statusbar.policy.CastController;
import com.android.systemui.statusbar.policy.ConfigurationController;
import com.android.systemui.statusbar.policy.DataSaverController;
import com.android.systemui.statusbar.policy.DeviceProvisionedController;
import com.android.systemui.statusbar.policy.ExtensionController;
import com.android.systemui.statusbar.policy.FlashlightController;
import com.android.systemui.statusbar.policy.HotspotController;
import com.android.systemui.statusbar.policy.KeyguardStateController;
import com.android.systemui.statusbar.policy.LocationController;
import com.android.systemui.statusbar.policy.NextAlarmController;
import com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler;
import com.android.systemui.statusbar.policy.RotationLockController;
import com.android.systemui.statusbar.policy.SecurityController;
import com.android.systemui.statusbar.policy.SensorPrivacyController;
import com.android.systemui.statusbar.policy.SmartReplyConstants;
import com.android.systemui.statusbar.policy.UserInfoController;
import com.android.systemui.statusbar.policy.UserSwitcherController;
import com.android.systemui.statusbar.policy.ZenModeController;
import com.android.systemui.statusbar.window.StatusBarWindowController;
import com.android.systemui.telephony.TelephonyListenerManager;
import com.android.systemui.tracing.ProtoTracer;
import com.android.systemui.tuner.TunablePadding;
import com.android.systemui.tuner.TunerService;
import com.android.systemui.util.DeviceConfigProxy;
import com.android.systemui.util.leak.GarbageMonitor;
import com.android.systemui.util.leak.LeakDetector;
import com.android.systemui.util.leak.LeakReporter;
import com.android.systemui.util.sensors.AsyncSensorManager;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import java.util.concurrent.Executor;
import javax.inject.Provider;

/* loaded from: mainsysui33.jar:com/android/systemui/Dependency_Factory.class */
public final class Dependency_Factory implements Factory<Dependency> {
    public final Provider<AccessibilityButtonTargetsObserver> mAccessibilityButtonListControllerProvider;
    public final Provider<AccessibilityButtonModeObserver> mAccessibilityButtonModeObserverProvider;
    public final Provider<AccessibilityController> mAccessibilityControllerProvider;
    public final Provider<AccessibilityFloatingMenuController> mAccessibilityFloatingMenuControllerProvider;
    public final Provider<AccessibilityManagerWrapper> mAccessibilityManagerWrapperProvider;
    public final Provider<ActivityManagerWrapper> mActivityManagerWrapperProvider;
    public final Provider<ActivityStarter> mActivityStarterProvider;
    public final Provider<AlarmManager> mAlarmManagerProvider;
    public final Provider<AmbientState> mAmbientStateLazyProvider;
    public final Provider<AppOpsController> mAppOpsControllerProvider;
    public final Provider<AssistManager> mAssistManagerProvider;
    public final Provider<AsyncSensorManager> mAsyncSensorManagerProvider;
    public final Provider<AutoHideController> mAutoHideControllerProvider;
    public final Provider<Executor> mBackgroundExecutorProvider;
    public final Provider<Handler> mBgHandlerProvider;
    public final Provider<Looper> mBgLooperProvider;
    public final Provider<BluetoothController> mBluetoothControllerProvider;
    public final Provider<BroadcastDispatcher> mBroadcastDispatcherProvider;
    public final Provider<CastController> mCastControllerProvider;
    public final Provider<ClockManager> mClockManagerProvider;
    public final Provider<CommandQueue> mCommandQueueProvider;
    public final Provider<ConfigurationController> mConfigurationControllerProvider;
    public final Provider<StatusBarContentInsetsProvider> mContentInsetsProviderLazyProvider;
    public final Provider<DarkIconDispatcher> mDarkIconDispatcherProvider;
    public final Provider<DataSaverController> mDataSaverControllerProvider;
    public final Provider<DeviceConfigProxy> mDeviceConfigProxyProvider;
    public final Provider<DevicePolicyManagerWrapper> mDevicePolicyManagerWrapperProvider;
    public final Provider<DeviceProvisionedController> mDeviceProvisionedControllerProvider;
    public final Provider<DialogLaunchAnimator> mDialogLaunchAnimatorLazyProvider;
    public final Provider<DisplayMetrics> mDisplayMetricsProvider;
    public final Provider<DockManager> mDockManagerProvider;
    public final Provider<DozeParameters> mDozeParametersProvider;
    public final Provider<DumpManager> mDumpManagerProvider;
    public final Provider<EdgeBackGestureHandler.Factory> mEdgeBackGestureHandlerFactoryLazyProvider;
    public final Provider<EnhancedEstimates> mEnhancedEstimatesProvider;
    public final Provider<ExtensionController> mExtensionControllerProvider;
    public final Provider<FeatureFlags> mFeatureFlagsLazyProvider;
    public final Provider<FlashlightController> mFlashlightControllerProvider;
    public final Provider<ForegroundServiceController> mForegroundServiceControllerProvider;
    public final Provider<FragmentService> mFragmentServiceProvider;
    public final Provider<GarbageMonitor> mGarbageMonitorProvider;
    public final Provider<GroupExpansionManager> mGroupExpansionManagerLazyProvider;
    public final Provider<GroupMembershipManager> mGroupMembershipManagerLazyProvider;
    public final Provider<HdmiCecSetMenuLanguageHelper> mHdmiCecSetMenuLanguageHelperProvider;
    public final Provider<HotspotController> mHotspotControllerProvider;
    public final Provider<INotificationManager> mINotificationManagerProvider;
    public final Provider<IStatusBarService> mIStatusBarServiceProvider;
    public final Provider<IWindowManager> mIWindowManagerProvider;
    public final Provider<InternetDialogFactory> mInternetDialogFactoryProvider;
    public final Provider<KeyguardDismissUtil> mKeyguardDismissUtilProvider;
    public final Provider<KeyguardStateController> mKeyguardMonitorProvider;
    public final Provider<KeyguardSecurityModel> mKeyguardSecurityModelProvider;
    public final Provider<KeyguardUpdateMonitor> mKeyguardUpdateMonitorProvider;
    public final Provider<LeakDetector> mLeakDetectorProvider;
    public final Provider<String> mLeakReportEmailProvider;
    public final Provider<LeakReporter> mLeakReporterProvider;
    public final Provider<LightBarController> mLightBarControllerProvider;
    public final Provider<LocalBluetoothManager> mLocalBluetoothManagerProvider;
    public final Provider<LocationController> mLocationControllerProvider;
    public final Provider<LockscreenGestureLogger> mLockscreenGestureLoggerProvider;
    public final Provider<Executor> mMainExecutorProvider;
    public final Provider<Handler> mMainHandlerProvider;
    public final Provider<Looper> mMainLooperProvider;
    public final Provider<ManagedProfileController> mManagedProfileControllerProvider;
    public final Provider<MediaOutputDialogFactory> mMediaOutputDialogFactoryProvider;
    public final Provider<MetricsLogger> mMetricsLoggerProvider;
    public final Provider<NavigationModeController> mNavBarModeControllerProvider;
    public final Provider<NavigationBarController> mNavigationBarControllerProvider;
    public final Provider<NextAlarmController> mNextAlarmControllerProvider;
    public final Provider<NightDisplayListener> mNightDisplayListenerProvider;
    public final Provider<NotificationGutsManager> mNotificationGutsManagerProvider;
    public final Provider<NotificationListener> mNotificationListenerProvider;
    public final Provider<NotificationLockscreenUserManager> mNotificationLockscreenUserManagerProvider;
    public final Provider<NotificationLogger> mNotificationLoggerProvider;
    public final Provider<NotificationMediaManager> mNotificationMediaManagerProvider;
    public final Provider<NotificationRemoteInputManager.Callback> mNotificationRemoteInputManagerCallbackProvider;
    public final Provider<NotificationRemoteInputManager> mNotificationRemoteInputManagerProvider;
    public final Provider<NotificationSectionsManager> mNotificationSectionsManagerLazyProvider;
    public final Provider<NotificationShadeWindowController> mNotificationShadeWindowControllerProvider;
    public final Provider<OverviewProxyService> mOverviewProxyServiceProvider;
    public final Provider<PackageManagerWrapper> mPackageManagerWrapperProvider;
    public final Provider<PluginDependencyProvider> mPluginDependencyProvider;
    public final Provider<PluginManager> mPluginManagerProvider;
    public final Provider<PrivacyDotViewController> mPrivacyDotViewControllerLazyProvider;
    public final Provider<PrivacyItemController> mPrivacyItemControllerProvider;
    public final Provider<ProtoTracer> mProtoTracerProvider;
    public final Provider<RecordingController> mRecordingControllerProvider;
    public final Provider<ReduceBrightColorsController> mReduceBrightColorsControllerProvider;
    public final Provider<RemoteInputQuickSettingsDisabler> mRemoteInputQuickSettingsDisablerProvider;
    public final Provider<RotationLockController> mRotationLockControllerProvider;
    public final Provider<ScreenLifecycle> mScreenLifecycleProvider;
    public final Provider<ScreenOffAnimationController> mScreenOffAnimationControllerProvider;
    public final Provider<SecurityController> mSecurityControllerProvider;
    public final Provider<SensorPrivacyController> mSensorPrivacyControllerProvider;
    public final Provider<SensorPrivacyManager> mSensorPrivacyManagerProvider;
    public final Provider<ShadeController> mShadeControllerProvider;
    public final Provider<SmartReplyConstants> mSmartReplyConstantsProvider;
    public final Provider<SmartReplyController> mSmartReplyControllerProvider;
    public final Provider<StatusBarIconController> mStatusBarIconControllerProvider;
    public final Provider<StatusBarStateController> mStatusBarStateControllerProvider;
    public final Provider<SysUiState> mSysUiStateFlagsContainerProvider;
    public final Provider<SystemStatusAnimationScheduler> mSystemStatusAnimationSchedulerLazyProvider;
    public final Provider<SystemUIDialogManager> mSystemUIDialogManagerLazyProvider;
    public final Provider<SysuiColorExtractor> mSysuiColorExtractorProvider;
    public final Provider<TelephonyListenerManager> mTelephonyListenerManagerProvider;
    public final Provider<StatusBarWindowController> mTempStatusBarWindowControllerProvider;
    public final Provider<Handler> mTimeTickHandlerProvider;
    public final Provider<TunablePadding.TunablePaddingService> mTunablePaddingServiceProvider;
    public final Provider<TunerService> mTunerServiceProvider;
    public final Provider<UiEventLogger> mUiEventLoggerProvider;
    public final Provider<UiOffloadThread> mUiOffloadThreadProvider;
    public final Provider<UserInfoController> mUserInfoControllerProvider;
    public final Provider<UserSwitcherController> mUserSwitcherControllerProvider;
    public final Provider<UserTracker> mUserTrackerLazyProvider;
    public final Provider<VibratorHelper> mVibratorHelperProvider;
    public final Provider<VolumeDialogController> mVolumeDialogControllerProvider;
    public final Provider<WakefulnessLifecycle> mWakefulnessLifecycleProvider;
    public final Provider<IWallpaperManager> mWallpaperManagerProvider;
    public final Provider<PowerUI.WarningsUI> mWarningsUIProvider;
    public final Provider<ZenModeController> mZenModeControllerProvider;

    public Dependency_Factory(Provider<DumpManager> provider, Provider<ActivityStarter> provider2, Provider<BroadcastDispatcher> provider3, Provider<AsyncSensorManager> provider4, Provider<BluetoothController> provider5, Provider<LocationController> provider6, Provider<RotationLockController> provider7, Provider<ZenModeController> provider8, Provider<HdmiCecSetMenuLanguageHelper> provider9, Provider<HotspotController> provider10, Provider<CastController> provider11, Provider<FlashlightController> provider12, Provider<UserSwitcherController> provider13, Provider<UserInfoController> provider14, Provider<KeyguardStateController> provider15, Provider<KeyguardUpdateMonitor> provider16, Provider<NightDisplayListener> provider17, Provider<ReduceBrightColorsController> provider18, Provider<ManagedProfileController> provider19, Provider<NextAlarmController> provider20, Provider<DataSaverController> provider21, Provider<AccessibilityController> provider22, Provider<DeviceProvisionedController> provider23, Provider<PluginManager> provider24, Provider<AssistManager> provider25, Provider<SecurityController> provider26, Provider<LeakDetector> provider27, Provider<LeakReporter> provider28, Provider<GarbageMonitor> provider29, Provider<TunerService> provider30, Provider<NotificationShadeWindowController> provider31, Provider<StatusBarWindowController> provider32, Provider<DarkIconDispatcher> provider33, Provider<ConfigurationController> provider34, Provider<StatusBarIconController> provider35, Provider<ScreenLifecycle> provider36, Provider<WakefulnessLifecycle> provider37, Provider<FragmentService> provider38, Provider<ExtensionController> provider39, Provider<PluginDependencyProvider> provider40, Provider<LocalBluetoothManager> provider41, Provider<VolumeDialogController> provider42, Provider<MetricsLogger> provider43, Provider<AccessibilityManagerWrapper> provider44, Provider<SysuiColorExtractor> provider45, Provider<TunablePadding.TunablePaddingService> provider46, Provider<ForegroundServiceController> provider47, Provider<UiOffloadThread> provider48, Provider<PowerUI.WarningsUI> provider49, Provider<LightBarController> provider50, Provider<IWindowManager> provider51, Provider<OverviewProxyService> provider52, Provider<NavigationModeController> provider53, Provider<AccessibilityButtonModeObserver> provider54, Provider<AccessibilityButtonTargetsObserver> provider55, Provider<EnhancedEstimates> provider56, Provider<VibratorHelper> provider57, Provider<IStatusBarService> provider58, Provider<DisplayMetrics> provider59, Provider<LockscreenGestureLogger> provider60, Provider<ShadeController> provider61, Provider<NotificationRemoteInputManager.Callback> provider62, Provider<AppOpsController> provider63, Provider<NavigationBarController> provider64, Provider<AccessibilityFloatingMenuController> provider65, Provider<StatusBarStateController> provider66, Provider<NotificationLockscreenUserManager> provider67, Provider<NotificationGutsManager> provider68, Provider<NotificationMediaManager> provider69, Provider<NotificationRemoteInputManager> provider70, Provider<SmartReplyConstants> provider71, Provider<NotificationListener> provider72, Provider<NotificationLogger> provider73, Provider<KeyguardDismissUtil> provider74, Provider<SmartReplyController> provider75, Provider<RemoteInputQuickSettingsDisabler> provider76, Provider<SensorPrivacyManager> provider77, Provider<AutoHideController> provider78, Provider<PrivacyItemController> provider79, Provider<Looper> provider80, Provider<Handler> provider81, Provider<Looper> provider82, Provider<Handler> provider83, Provider<Handler> provider84, Provider<String> provider85, Provider<Executor> provider86, Provider<Executor> provider87, Provider<ClockManager> provider88, Provider<ActivityManagerWrapper> provider89, Provider<DevicePolicyManagerWrapper> provider90, Provider<PackageManagerWrapper> provider91, Provider<SensorPrivacyController> provider92, Provider<DockManager> provider93, Provider<INotificationManager> provider94, Provider<SysUiState> provider95, Provider<AlarmManager> provider96, Provider<KeyguardSecurityModel> provider97, Provider<DozeParameters> provider98, Provider<IWallpaperManager> provider99, Provider<CommandQueue> provider100, Provider<RecordingController> provider101, Provider<ProtoTracer> provider102, Provider<MediaOutputDialogFactory> provider103, Provider<DeviceConfigProxy> provider104, Provider<TelephonyListenerManager> provider105, Provider<SystemStatusAnimationScheduler> provider106, Provider<PrivacyDotViewController> provider107, Provider<EdgeBackGestureHandler.Factory> provider108, Provider<UiEventLogger> provider109, Provider<StatusBarContentInsetsProvider> provider110, Provider<InternetDialogFactory> provider111, Provider<FeatureFlags> provider112, Provider<NotificationSectionsManager> provider113, Provider<ScreenOffAnimationController> provider114, Provider<AmbientState> provider115, Provider<GroupMembershipManager> provider116, Provider<GroupExpansionManager> provider117, Provider<SystemUIDialogManager> provider118, Provider<DialogLaunchAnimator> provider119, Provider<UserTracker> provider120) {
        this.mDumpManagerProvider = provider;
        this.mActivityStarterProvider = provider2;
        this.mBroadcastDispatcherProvider = provider3;
        this.mAsyncSensorManagerProvider = provider4;
        this.mBluetoothControllerProvider = provider5;
        this.mLocationControllerProvider = provider6;
        this.mRotationLockControllerProvider = provider7;
        this.mZenModeControllerProvider = provider8;
        this.mHdmiCecSetMenuLanguageHelperProvider = provider9;
        this.mHotspotControllerProvider = provider10;
        this.mCastControllerProvider = provider11;
        this.mFlashlightControllerProvider = provider12;
        this.mUserSwitcherControllerProvider = provider13;
        this.mUserInfoControllerProvider = provider14;
        this.mKeyguardMonitorProvider = provider15;
        this.mKeyguardUpdateMonitorProvider = provider16;
        this.mNightDisplayListenerProvider = provider17;
        this.mReduceBrightColorsControllerProvider = provider18;
        this.mManagedProfileControllerProvider = provider19;
        this.mNextAlarmControllerProvider = provider20;
        this.mDataSaverControllerProvider = provider21;
        this.mAccessibilityControllerProvider = provider22;
        this.mDeviceProvisionedControllerProvider = provider23;
        this.mPluginManagerProvider = provider24;
        this.mAssistManagerProvider = provider25;
        this.mSecurityControllerProvider = provider26;
        this.mLeakDetectorProvider = provider27;
        this.mLeakReporterProvider = provider28;
        this.mGarbageMonitorProvider = provider29;
        this.mTunerServiceProvider = provider30;
        this.mNotificationShadeWindowControllerProvider = provider31;
        this.mTempStatusBarWindowControllerProvider = provider32;
        this.mDarkIconDispatcherProvider = provider33;
        this.mConfigurationControllerProvider = provider34;
        this.mStatusBarIconControllerProvider = provider35;
        this.mScreenLifecycleProvider = provider36;
        this.mWakefulnessLifecycleProvider = provider37;
        this.mFragmentServiceProvider = provider38;
        this.mExtensionControllerProvider = provider39;
        this.mPluginDependencyProvider = provider40;
        this.mLocalBluetoothManagerProvider = provider41;
        this.mVolumeDialogControllerProvider = provider42;
        this.mMetricsLoggerProvider = provider43;
        this.mAccessibilityManagerWrapperProvider = provider44;
        this.mSysuiColorExtractorProvider = provider45;
        this.mTunablePaddingServiceProvider = provider46;
        this.mForegroundServiceControllerProvider = provider47;
        this.mUiOffloadThreadProvider = provider48;
        this.mWarningsUIProvider = provider49;
        this.mLightBarControllerProvider = provider50;
        this.mIWindowManagerProvider = provider51;
        this.mOverviewProxyServiceProvider = provider52;
        this.mNavBarModeControllerProvider = provider53;
        this.mAccessibilityButtonModeObserverProvider = provider54;
        this.mAccessibilityButtonListControllerProvider = provider55;
        this.mEnhancedEstimatesProvider = provider56;
        this.mVibratorHelperProvider = provider57;
        this.mIStatusBarServiceProvider = provider58;
        this.mDisplayMetricsProvider = provider59;
        this.mLockscreenGestureLoggerProvider = provider60;
        this.mShadeControllerProvider = provider61;
        this.mNotificationRemoteInputManagerCallbackProvider = provider62;
        this.mAppOpsControllerProvider = provider63;
        this.mNavigationBarControllerProvider = provider64;
        this.mAccessibilityFloatingMenuControllerProvider = provider65;
        this.mStatusBarStateControllerProvider = provider66;
        this.mNotificationLockscreenUserManagerProvider = provider67;
        this.mNotificationGutsManagerProvider = provider68;
        this.mNotificationMediaManagerProvider = provider69;
        this.mNotificationRemoteInputManagerProvider = provider70;
        this.mSmartReplyConstantsProvider = provider71;
        this.mNotificationListenerProvider = provider72;
        this.mNotificationLoggerProvider = provider73;
        this.mKeyguardDismissUtilProvider = provider74;
        this.mSmartReplyControllerProvider = provider75;
        this.mRemoteInputQuickSettingsDisablerProvider = provider76;
        this.mSensorPrivacyManagerProvider = provider77;
        this.mAutoHideControllerProvider = provider78;
        this.mPrivacyItemControllerProvider = provider79;
        this.mBgLooperProvider = provider80;
        this.mBgHandlerProvider = provider81;
        this.mMainLooperProvider = provider82;
        this.mMainHandlerProvider = provider83;
        this.mTimeTickHandlerProvider = provider84;
        this.mLeakReportEmailProvider = provider85;
        this.mMainExecutorProvider = provider86;
        this.mBackgroundExecutorProvider = provider87;
        this.mClockManagerProvider = provider88;
        this.mActivityManagerWrapperProvider = provider89;
        this.mDevicePolicyManagerWrapperProvider = provider90;
        this.mPackageManagerWrapperProvider = provider91;
        this.mSensorPrivacyControllerProvider = provider92;
        this.mDockManagerProvider = provider93;
        this.mINotificationManagerProvider = provider94;
        this.mSysUiStateFlagsContainerProvider = provider95;
        this.mAlarmManagerProvider = provider96;
        this.mKeyguardSecurityModelProvider = provider97;
        this.mDozeParametersProvider = provider98;
        this.mWallpaperManagerProvider = provider99;
        this.mCommandQueueProvider = provider100;
        this.mRecordingControllerProvider = provider101;
        this.mProtoTracerProvider = provider102;
        this.mMediaOutputDialogFactoryProvider = provider103;
        this.mDeviceConfigProxyProvider = provider104;
        this.mTelephonyListenerManagerProvider = provider105;
        this.mSystemStatusAnimationSchedulerLazyProvider = provider106;
        this.mPrivacyDotViewControllerLazyProvider = provider107;
        this.mEdgeBackGestureHandlerFactoryLazyProvider = provider108;
        this.mUiEventLoggerProvider = provider109;
        this.mContentInsetsProviderLazyProvider = provider110;
        this.mInternetDialogFactoryProvider = provider111;
        this.mFeatureFlagsLazyProvider = provider112;
        this.mNotificationSectionsManagerLazyProvider = provider113;
        this.mScreenOffAnimationControllerProvider = provider114;
        this.mAmbientStateLazyProvider = provider115;
        this.mGroupMembershipManagerLazyProvider = provider116;
        this.mGroupExpansionManagerLazyProvider = provider117;
        this.mSystemUIDialogManagerLazyProvider = provider118;
        this.mDialogLaunchAnimatorLazyProvider = provider119;
        this.mUserTrackerLazyProvider = provider120;
    }

    public static Dependency_Factory create(Provider<DumpManager> provider, Provider<ActivityStarter> provider2, Provider<BroadcastDispatcher> provider3, Provider<AsyncSensorManager> provider4, Provider<BluetoothController> provider5, Provider<LocationController> provider6, Provider<RotationLockController> provider7, Provider<ZenModeController> provider8, Provider<HdmiCecSetMenuLanguageHelper> provider9, Provider<HotspotController> provider10, Provider<CastController> provider11, Provider<FlashlightController> provider12, Provider<UserSwitcherController> provider13, Provider<UserInfoController> provider14, Provider<KeyguardStateController> provider15, Provider<KeyguardUpdateMonitor> provider16, Provider<NightDisplayListener> provider17, Provider<ReduceBrightColorsController> provider18, Provider<ManagedProfileController> provider19, Provider<NextAlarmController> provider20, Provider<DataSaverController> provider21, Provider<AccessibilityController> provider22, Provider<DeviceProvisionedController> provider23, Provider<PluginManager> provider24, Provider<AssistManager> provider25, Provider<SecurityController> provider26, Provider<LeakDetector> provider27, Provider<LeakReporter> provider28, Provider<GarbageMonitor> provider29, Provider<TunerService> provider30, Provider<NotificationShadeWindowController> provider31, Provider<StatusBarWindowController> provider32, Provider<DarkIconDispatcher> provider33, Provider<ConfigurationController> provider34, Provider<StatusBarIconController> provider35, Provider<ScreenLifecycle> provider36, Provider<WakefulnessLifecycle> provider37, Provider<FragmentService> provider38, Provider<ExtensionController> provider39, Provider<PluginDependencyProvider> provider40, Provider<LocalBluetoothManager> provider41, Provider<VolumeDialogController> provider42, Provider<MetricsLogger> provider43, Provider<AccessibilityManagerWrapper> provider44, Provider<SysuiColorExtractor> provider45, Provider<TunablePadding.TunablePaddingService> provider46, Provider<ForegroundServiceController> provider47, Provider<UiOffloadThread> provider48, Provider<PowerUI.WarningsUI> provider49, Provider<LightBarController> provider50, Provider<IWindowManager> provider51, Provider<OverviewProxyService> provider52, Provider<NavigationModeController> provider53, Provider<AccessibilityButtonModeObserver> provider54, Provider<AccessibilityButtonTargetsObserver> provider55, Provider<EnhancedEstimates> provider56, Provider<VibratorHelper> provider57, Provider<IStatusBarService> provider58, Provider<DisplayMetrics> provider59, Provider<LockscreenGestureLogger> provider60, Provider<ShadeController> provider61, Provider<NotificationRemoteInputManager.Callback> provider62, Provider<AppOpsController> provider63, Provider<NavigationBarController> provider64, Provider<AccessibilityFloatingMenuController> provider65, Provider<StatusBarStateController> provider66, Provider<NotificationLockscreenUserManager> provider67, Provider<NotificationGutsManager> provider68, Provider<NotificationMediaManager> provider69, Provider<NotificationRemoteInputManager> provider70, Provider<SmartReplyConstants> provider71, Provider<NotificationListener> provider72, Provider<NotificationLogger> provider73, Provider<KeyguardDismissUtil> provider74, Provider<SmartReplyController> provider75, Provider<RemoteInputQuickSettingsDisabler> provider76, Provider<SensorPrivacyManager> provider77, Provider<AutoHideController> provider78, Provider<PrivacyItemController> provider79, Provider<Looper> provider80, Provider<Handler> provider81, Provider<Looper> provider82, Provider<Handler> provider83, Provider<Handler> provider84, Provider<String> provider85, Provider<Executor> provider86, Provider<Executor> provider87, Provider<ClockManager> provider88, Provider<ActivityManagerWrapper> provider89, Provider<DevicePolicyManagerWrapper> provider90, Provider<PackageManagerWrapper> provider91, Provider<SensorPrivacyController> provider92, Provider<DockManager> provider93, Provider<INotificationManager> provider94, Provider<SysUiState> provider95, Provider<AlarmManager> provider96, Provider<KeyguardSecurityModel> provider97, Provider<DozeParameters> provider98, Provider<IWallpaperManager> provider99, Provider<CommandQueue> provider100, Provider<RecordingController> provider101, Provider<ProtoTracer> provider102, Provider<MediaOutputDialogFactory> provider103, Provider<DeviceConfigProxy> provider104, Provider<TelephonyListenerManager> provider105, Provider<SystemStatusAnimationScheduler> provider106, Provider<PrivacyDotViewController> provider107, Provider<EdgeBackGestureHandler.Factory> provider108, Provider<UiEventLogger> provider109, Provider<StatusBarContentInsetsProvider> provider110, Provider<InternetDialogFactory> provider111, Provider<FeatureFlags> provider112, Provider<NotificationSectionsManager> provider113, Provider<ScreenOffAnimationController> provider114, Provider<AmbientState> provider115, Provider<GroupMembershipManager> provider116, Provider<GroupExpansionManager> provider117, Provider<SystemUIDialogManager> provider118, Provider<DialogLaunchAnimator> provider119, Provider<UserTracker> provider120) {
        return new Dependency_Factory(provider, provider2, provider3, provider4, provider5, provider6, provider7, provider8, provider9, provider10, provider11, provider12, provider13, provider14, provider15, provider16, provider17, provider18, provider19, provider20, provider21, provider22, provider23, provider24, provider25, provider26, provider27, provider28, provider29, provider30, provider31, provider32, provider33, provider34, provider35, provider36, provider37, provider38, provider39, provider40, provider41, provider42, provider43, provider44, provider45, provider46, provider47, provider48, provider49, provider50, provider51, provider52, provider53, provider54, provider55, provider56, provider57, provider58, provider59, provider60, provider61, provider62, provider63, provider64, provider65, provider66, provider67, provider68, provider69, provider70, provider71, provider72, provider73, provider74, provider75, provider76, provider77, provider78, provider79, provider80, provider81, provider82, provider83, provider84, provider85, provider86, provider87, provider88, provider89, provider90, provider91, provider92, provider93, provider94, provider95, provider96, provider97, provider98, provider99, provider100, provider101, provider102, provider103, provider104, provider105, provider106, provider107, provider108, provider109, provider110, provider111, provider112, provider113, provider114, provider115, provider116, provider117, provider118, provider119, provider120);
    }

    public static Dependency newInstance() {
        return new Dependency();
    }

    /* JADX DEBUG: Method merged with bridge method */
    /* renamed from: get */
    public Dependency m1239get() {
        Dependency newInstance = newInstance();
        Dependency_MembersInjector.injectMDumpManager(newInstance, (DumpManager) this.mDumpManagerProvider.get());
        Dependency_MembersInjector.injectMActivityStarter(newInstance, DoubleCheck.lazy(this.mActivityStarterProvider));
        Dependency_MembersInjector.injectMBroadcastDispatcher(newInstance, DoubleCheck.lazy(this.mBroadcastDispatcherProvider));
        Dependency_MembersInjector.injectMAsyncSensorManager(newInstance, DoubleCheck.lazy(this.mAsyncSensorManagerProvider));
        Dependency_MembersInjector.injectMBluetoothController(newInstance, DoubleCheck.lazy(this.mBluetoothControllerProvider));
        Dependency_MembersInjector.injectMLocationController(newInstance, DoubleCheck.lazy(this.mLocationControllerProvider));
        Dependency_MembersInjector.injectMRotationLockController(newInstance, DoubleCheck.lazy(this.mRotationLockControllerProvider));
        Dependency_MembersInjector.injectMZenModeController(newInstance, DoubleCheck.lazy(this.mZenModeControllerProvider));
        Dependency_MembersInjector.injectMHdmiCecSetMenuLanguageHelper(newInstance, DoubleCheck.lazy(this.mHdmiCecSetMenuLanguageHelperProvider));
        Dependency_MembersInjector.injectMHotspotController(newInstance, DoubleCheck.lazy(this.mHotspotControllerProvider));
        Dependency_MembersInjector.injectMCastController(newInstance, DoubleCheck.lazy(this.mCastControllerProvider));
        Dependency_MembersInjector.injectMFlashlightController(newInstance, DoubleCheck.lazy(this.mFlashlightControllerProvider));
        Dependency_MembersInjector.injectMUserSwitcherController(newInstance, DoubleCheck.lazy(this.mUserSwitcherControllerProvider));
        Dependency_MembersInjector.injectMUserInfoController(newInstance, DoubleCheck.lazy(this.mUserInfoControllerProvider));
        Dependency_MembersInjector.injectMKeyguardMonitor(newInstance, DoubleCheck.lazy(this.mKeyguardMonitorProvider));
        Dependency_MembersInjector.injectMKeyguardUpdateMonitor(newInstance, DoubleCheck.lazy(this.mKeyguardUpdateMonitorProvider));
        Dependency_MembersInjector.injectMNightDisplayListener(newInstance, DoubleCheck.lazy(this.mNightDisplayListenerProvider));
        Dependency_MembersInjector.injectMReduceBrightColorsController(newInstance, DoubleCheck.lazy(this.mReduceBrightColorsControllerProvider));
        Dependency_MembersInjector.injectMManagedProfileController(newInstance, DoubleCheck.lazy(this.mManagedProfileControllerProvider));
        Dependency_MembersInjector.injectMNextAlarmController(newInstance, DoubleCheck.lazy(this.mNextAlarmControllerProvider));
        Dependency_MembersInjector.injectMDataSaverController(newInstance, DoubleCheck.lazy(this.mDataSaverControllerProvider));
        Dependency_MembersInjector.injectMAccessibilityController(newInstance, DoubleCheck.lazy(this.mAccessibilityControllerProvider));
        Dependency_MembersInjector.injectMDeviceProvisionedController(newInstance, DoubleCheck.lazy(this.mDeviceProvisionedControllerProvider));
        Dependency_MembersInjector.injectMPluginManager(newInstance, DoubleCheck.lazy(this.mPluginManagerProvider));
        Dependency_MembersInjector.injectMAssistManager(newInstance, DoubleCheck.lazy(this.mAssistManagerProvider));
        Dependency_MembersInjector.injectMSecurityController(newInstance, DoubleCheck.lazy(this.mSecurityControllerProvider));
        Dependency_MembersInjector.injectMLeakDetector(newInstance, DoubleCheck.lazy(this.mLeakDetectorProvider));
        Dependency_MembersInjector.injectMLeakReporter(newInstance, DoubleCheck.lazy(this.mLeakReporterProvider));
        Dependency_MembersInjector.injectMGarbageMonitor(newInstance, DoubleCheck.lazy(this.mGarbageMonitorProvider));
        Dependency_MembersInjector.injectMTunerService(newInstance, DoubleCheck.lazy(this.mTunerServiceProvider));
        Dependency_MembersInjector.injectMNotificationShadeWindowController(newInstance, DoubleCheck.lazy(this.mNotificationShadeWindowControllerProvider));
        Dependency_MembersInjector.injectMTempStatusBarWindowController(newInstance, DoubleCheck.lazy(this.mTempStatusBarWindowControllerProvider));
        Dependency_MembersInjector.injectMDarkIconDispatcher(newInstance, DoubleCheck.lazy(this.mDarkIconDispatcherProvider));
        Dependency_MembersInjector.injectMConfigurationController(newInstance, DoubleCheck.lazy(this.mConfigurationControllerProvider));
        Dependency_MembersInjector.injectMStatusBarIconController(newInstance, DoubleCheck.lazy(this.mStatusBarIconControllerProvider));
        Dependency_MembersInjector.injectMScreenLifecycle(newInstance, DoubleCheck.lazy(this.mScreenLifecycleProvider));
        Dependency_MembersInjector.injectMWakefulnessLifecycle(newInstance, DoubleCheck.lazy(this.mWakefulnessLifecycleProvider));
        Dependency_MembersInjector.injectMFragmentService(newInstance, DoubleCheck.lazy(this.mFragmentServiceProvider));
        Dependency_MembersInjector.injectMExtensionController(newInstance, DoubleCheck.lazy(this.mExtensionControllerProvider));
        Dependency_MembersInjector.injectMPluginDependencyProvider(newInstance, DoubleCheck.lazy(this.mPluginDependencyProvider));
        Dependency_MembersInjector.injectMLocalBluetoothManager(newInstance, DoubleCheck.lazy(this.mLocalBluetoothManagerProvider));
        Dependency_MembersInjector.injectMVolumeDialogController(newInstance, DoubleCheck.lazy(this.mVolumeDialogControllerProvider));
        Dependency_MembersInjector.injectMMetricsLogger(newInstance, DoubleCheck.lazy(this.mMetricsLoggerProvider));
        Dependency_MembersInjector.injectMAccessibilityManagerWrapper(newInstance, DoubleCheck.lazy(this.mAccessibilityManagerWrapperProvider));
        Dependency_MembersInjector.injectMSysuiColorExtractor(newInstance, DoubleCheck.lazy(this.mSysuiColorExtractorProvider));
        Dependency_MembersInjector.injectMTunablePaddingService(newInstance, DoubleCheck.lazy(this.mTunablePaddingServiceProvider));
        Dependency_MembersInjector.injectMForegroundServiceController(newInstance, DoubleCheck.lazy(this.mForegroundServiceControllerProvider));
        Dependency_MembersInjector.injectMUiOffloadThread(newInstance, DoubleCheck.lazy(this.mUiOffloadThreadProvider));
        Dependency_MembersInjector.injectMWarningsUI(newInstance, DoubleCheck.lazy(this.mWarningsUIProvider));
        Dependency_MembersInjector.injectMLightBarController(newInstance, DoubleCheck.lazy(this.mLightBarControllerProvider));
        Dependency_MembersInjector.injectMIWindowManager(newInstance, DoubleCheck.lazy(this.mIWindowManagerProvider));
        Dependency_MembersInjector.injectMOverviewProxyService(newInstance, DoubleCheck.lazy(this.mOverviewProxyServiceProvider));
        Dependency_MembersInjector.injectMNavBarModeController(newInstance, DoubleCheck.lazy(this.mNavBarModeControllerProvider));
        Dependency_MembersInjector.injectMAccessibilityButtonModeObserver(newInstance, DoubleCheck.lazy(this.mAccessibilityButtonModeObserverProvider));
        Dependency_MembersInjector.injectMAccessibilityButtonListController(newInstance, DoubleCheck.lazy(this.mAccessibilityButtonListControllerProvider));
        Dependency_MembersInjector.injectMEnhancedEstimates(newInstance, DoubleCheck.lazy(this.mEnhancedEstimatesProvider));
        Dependency_MembersInjector.injectMVibratorHelper(newInstance, DoubleCheck.lazy(this.mVibratorHelperProvider));
        Dependency_MembersInjector.injectMIStatusBarService(newInstance, DoubleCheck.lazy(this.mIStatusBarServiceProvider));
        Dependency_MembersInjector.injectMDisplayMetrics(newInstance, DoubleCheck.lazy(this.mDisplayMetricsProvider));
        Dependency_MembersInjector.injectMLockscreenGestureLogger(newInstance, DoubleCheck.lazy(this.mLockscreenGestureLoggerProvider));
        Dependency_MembersInjector.injectMShadeController(newInstance, DoubleCheck.lazy(this.mShadeControllerProvider));
        Dependency_MembersInjector.injectMNotificationRemoteInputManagerCallback(newInstance, DoubleCheck.lazy(this.mNotificationRemoteInputManagerCallbackProvider));
        Dependency_MembersInjector.injectMAppOpsController(newInstance, DoubleCheck.lazy(this.mAppOpsControllerProvider));
        Dependency_MembersInjector.injectMNavigationBarController(newInstance, DoubleCheck.lazy(this.mNavigationBarControllerProvider));
        Dependency_MembersInjector.injectMAccessibilityFloatingMenuController(newInstance, DoubleCheck.lazy(this.mAccessibilityFloatingMenuControllerProvider));
        Dependency_MembersInjector.injectMStatusBarStateController(newInstance, DoubleCheck.lazy(this.mStatusBarStateControllerProvider));
        Dependency_MembersInjector.injectMNotificationLockscreenUserManager(newInstance, DoubleCheck.lazy(this.mNotificationLockscreenUserManagerProvider));
        Dependency_MembersInjector.injectMNotificationGutsManager(newInstance, DoubleCheck.lazy(this.mNotificationGutsManagerProvider));
        Dependency_MembersInjector.injectMNotificationMediaManager(newInstance, DoubleCheck.lazy(this.mNotificationMediaManagerProvider));
        Dependency_MembersInjector.injectMNotificationRemoteInputManager(newInstance, DoubleCheck.lazy(this.mNotificationRemoteInputManagerProvider));
        Dependency_MembersInjector.injectMSmartReplyConstants(newInstance, DoubleCheck.lazy(this.mSmartReplyConstantsProvider));
        Dependency_MembersInjector.injectMNotificationListener(newInstance, DoubleCheck.lazy(this.mNotificationListenerProvider));
        Dependency_MembersInjector.injectMNotificationLogger(newInstance, DoubleCheck.lazy(this.mNotificationLoggerProvider));
        Dependency_MembersInjector.injectMKeyguardDismissUtil(newInstance, DoubleCheck.lazy(this.mKeyguardDismissUtilProvider));
        Dependency_MembersInjector.injectMSmartReplyController(newInstance, DoubleCheck.lazy(this.mSmartReplyControllerProvider));
        Dependency_MembersInjector.injectMRemoteInputQuickSettingsDisabler(newInstance, DoubleCheck.lazy(this.mRemoteInputQuickSettingsDisablerProvider));
        Dependency_MembersInjector.injectMSensorPrivacyManager(newInstance, DoubleCheck.lazy(this.mSensorPrivacyManagerProvider));
        Dependency_MembersInjector.injectMAutoHideController(newInstance, DoubleCheck.lazy(this.mAutoHideControllerProvider));
        Dependency_MembersInjector.injectMPrivacyItemController(newInstance, DoubleCheck.lazy(this.mPrivacyItemControllerProvider));
        Dependency_MembersInjector.injectMBgLooper(newInstance, DoubleCheck.lazy(this.mBgLooperProvider));
        Dependency_MembersInjector.injectMBgHandler(newInstance, DoubleCheck.lazy(this.mBgHandlerProvider));
        Dependency_MembersInjector.injectMMainLooper(newInstance, DoubleCheck.lazy(this.mMainLooperProvider));
        Dependency_MembersInjector.injectMMainHandler(newInstance, DoubleCheck.lazy(this.mMainHandlerProvider));
        Dependency_MembersInjector.injectMTimeTickHandler(newInstance, DoubleCheck.lazy(this.mTimeTickHandlerProvider));
        Dependency_MembersInjector.injectMLeakReportEmail(newInstance, DoubleCheck.lazy(this.mLeakReportEmailProvider));
        Dependency_MembersInjector.injectMMainExecutor(newInstance, DoubleCheck.lazy(this.mMainExecutorProvider));
        Dependency_MembersInjector.injectMBackgroundExecutor(newInstance, DoubleCheck.lazy(this.mBackgroundExecutorProvider));
        Dependency_MembersInjector.injectMClockManager(newInstance, DoubleCheck.lazy(this.mClockManagerProvider));
        Dependency_MembersInjector.injectMActivityManagerWrapper(newInstance, DoubleCheck.lazy(this.mActivityManagerWrapperProvider));
        Dependency_MembersInjector.injectMDevicePolicyManagerWrapper(newInstance, DoubleCheck.lazy(this.mDevicePolicyManagerWrapperProvider));
        Dependency_MembersInjector.injectMPackageManagerWrapper(newInstance, DoubleCheck.lazy(this.mPackageManagerWrapperProvider));
        Dependency_MembersInjector.injectMSensorPrivacyController(newInstance, DoubleCheck.lazy(this.mSensorPrivacyControllerProvider));
        Dependency_MembersInjector.injectMDockManager(newInstance, DoubleCheck.lazy(this.mDockManagerProvider));
        Dependency_MembersInjector.injectMINotificationManager(newInstance, DoubleCheck.lazy(this.mINotificationManagerProvider));
        Dependency_MembersInjector.injectMSysUiStateFlagsContainer(newInstance, DoubleCheck.lazy(this.mSysUiStateFlagsContainerProvider));
        Dependency_MembersInjector.injectMAlarmManager(newInstance, DoubleCheck.lazy(this.mAlarmManagerProvider));
        Dependency_MembersInjector.injectMKeyguardSecurityModel(newInstance, DoubleCheck.lazy(this.mKeyguardSecurityModelProvider));
        Dependency_MembersInjector.injectMDozeParameters(newInstance, DoubleCheck.lazy(this.mDozeParametersProvider));
        Dependency_MembersInjector.injectMWallpaperManager(newInstance, DoubleCheck.lazy(this.mWallpaperManagerProvider));
        Dependency_MembersInjector.injectMCommandQueue(newInstance, DoubleCheck.lazy(this.mCommandQueueProvider));
        Dependency_MembersInjector.injectMRecordingController(newInstance, DoubleCheck.lazy(this.mRecordingControllerProvider));
        Dependency_MembersInjector.injectMProtoTracer(newInstance, DoubleCheck.lazy(this.mProtoTracerProvider));
        Dependency_MembersInjector.injectMMediaOutputDialogFactory(newInstance, DoubleCheck.lazy(this.mMediaOutputDialogFactoryProvider));
        Dependency_MembersInjector.injectMDeviceConfigProxy(newInstance, DoubleCheck.lazy(this.mDeviceConfigProxyProvider));
        Dependency_MembersInjector.injectMTelephonyListenerManager(newInstance, DoubleCheck.lazy(this.mTelephonyListenerManagerProvider));
        Dependency_MembersInjector.injectMSystemStatusAnimationSchedulerLazy(newInstance, DoubleCheck.lazy(this.mSystemStatusAnimationSchedulerLazyProvider));
        Dependency_MembersInjector.injectMPrivacyDotViewControllerLazy(newInstance, DoubleCheck.lazy(this.mPrivacyDotViewControllerLazyProvider));
        Dependency_MembersInjector.injectMEdgeBackGestureHandlerFactoryLazy(newInstance, DoubleCheck.lazy(this.mEdgeBackGestureHandlerFactoryLazyProvider));
        Dependency_MembersInjector.injectMUiEventLogger(newInstance, DoubleCheck.lazy(this.mUiEventLoggerProvider));
        Dependency_MembersInjector.injectMContentInsetsProviderLazy(newInstance, DoubleCheck.lazy(this.mContentInsetsProviderLazyProvider));
        Dependency_MembersInjector.injectMInternetDialogFactory(newInstance, DoubleCheck.lazy(this.mInternetDialogFactoryProvider));
        Dependency_MembersInjector.injectMFeatureFlagsLazy(newInstance, DoubleCheck.lazy(this.mFeatureFlagsLazyProvider));
        Dependency_MembersInjector.injectMNotificationSectionsManagerLazy(newInstance, DoubleCheck.lazy(this.mNotificationSectionsManagerLazyProvider));
        Dependency_MembersInjector.injectMScreenOffAnimationController(newInstance, DoubleCheck.lazy(this.mScreenOffAnimationControllerProvider));
        Dependency_MembersInjector.injectMAmbientStateLazy(newInstance, DoubleCheck.lazy(this.mAmbientStateLazyProvider));
        Dependency_MembersInjector.injectMGroupMembershipManagerLazy(newInstance, DoubleCheck.lazy(this.mGroupMembershipManagerLazyProvider));
        Dependency_MembersInjector.injectMGroupExpansionManagerLazy(newInstance, DoubleCheck.lazy(this.mGroupExpansionManagerLazyProvider));
        Dependency_MembersInjector.injectMSystemUIDialogManagerLazy(newInstance, DoubleCheck.lazy(this.mSystemUIDialogManagerLazyProvider));
        Dependency_MembersInjector.injectMDialogLaunchAnimatorLazy(newInstance, DoubleCheck.lazy(this.mDialogLaunchAnimatorLazyProvider));
        Dependency_MembersInjector.injectMUserTrackerLazy(newInstance, DoubleCheck.lazy(this.mUserTrackerLazyProvider));
        return newInstance;
    }
}